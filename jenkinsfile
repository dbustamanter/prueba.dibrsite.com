pipeline {
    agent any
    tools {
        nodejs "node"
    }
    environment {
        TESTPLAN = "IXR-94"
        TAG = "@TEST_IXR-93"
    }
    stages {
        stage('CleanWorkspace') {
            steps {
                cleanWs()
            }
        }
        stage('gitClone') {
          steps {
            git branch: 'demo', url: 'https://github.com/dbustamanter/prueba.dibrsite.com.git'
          }
          post {
            success {
              echo 'La clonaci贸n del repositorio ha sido exitosa'
            }
            failure {
              echo 'La clonaci贸n del repositorio ha fallado'
            }
          }
        }
        stage('Pruebas unitarias') {
        steps {
            sh 'npm install'
            script {
                try {
                    def testResult = sh(returnStdout: true, script: 'npm test || exit 1')
                    echo "Resultado de la prueba: ${testResult}"
                } catch (err) {
                    if (err instanceof hudson.AbortException && err.getMessage().contains("exit code 1")) {
                        echo "La prueba fall贸. Por favor, revise su c贸digo."
                        throw err
                    } else {
                        echo "Prueba exitosa"
                        throw err
                    }
                }
            }
        }
    }
    stage('Deploy QA') {
      steps {
        sh 'cp -r $WORKSPACE/* /var/www/html/qa'
      }
      post {
        success {
          echo 'El despliegue al ambiente QA ha sido exitoso'
        }
        failure {
          echo 'El despliegue al ambiente QA ha fallado'
        }
      }
    }
    stage('Merge Master') {
      steps {
        cleanWs()
        git branch: 'demo', url: 'https://github.com/dbustamanter/prueba.dibrsite.com.git'
        sh "git config --global user.email 'Tsoft@tsoftglobal.com'"
        sh "git config --global user.name 'Tsoft'"
        sh "git checkout master"
        sh "git merge --no-ff -m 'Merge de cambios de develop' develop"
        script {
          withCredentials([string(credentialsId: 'merge_tokenppl', variable: 'MERGE_TOKENPPL')]){
            sh "git push -f https://${MERGE_TOKENPPL}@github.com/dbustamanter/prueba.dibrsite.com.git demo_master"
          }
        }
      }
      post {
        success {
          echo 'La migracion ha sido exitosa'
        }
        failure {
          echo 'La migracion ha fallado.'
        }
      }
    }
    stage('Deploy Prod') {
      steps {
        cleanWs()
        git branch: 'demo_master', url: 'https://github.com/dbustamanter/prueba.dibrsite.com.git'
        sh 'cp -r $WORKSPACE/* /var/www/html/prod'
      }
    post {
        success {
          echo 'El despliegue al ambiente PROD ha sido exitoso'
        }
        failure {
          echo 'El despliegue al ambiente PROD ha fallado'
        }
      }
    }
  }
}
